{"name":"MATLAB-Fa14","tagline":"CSE Training Workshops in MATLAB, Fall 2014 • MEL 1001, 10 am–Noon","body":"All workshops will be held in 1001 Mechanical Engineering Laboratory, an EWS computer laboratory.  There is no sign-up for this series—walk-ins are welcome and encouraged!\r\n\r\n# [Beginning Scientific Programming with MATLAB](#begin)\r\n### Sep. 4, 10–Noon • MEL 1001\r\n\r\nThis workshop targets students with little to no programming experience.  We will conduct a hands-on walkthrough of what MATLAB has to offer as a foundation for later tutorials throughout the semester.\r\n\r\nWe will cover the following topics:\r\n\r\n- Variables, functions, sequences, dictionaries\r\n- Libraries and modules\r\n- Loops, logic, and conditionals\r\n- Input/output, files\r\n\r\n(If you don't know what some of these mean, don't worry!  This is a gentle introduction.)\r\n\r\n# [Introduction to MATLAB](#intro)\r\n### Sep. 11, 10–Noon • MEL 1001\r\n### Sep. 25, 10–Noon • MEL 1001\r\n### Oct. 9, 5–7 pm • MEL 1001\r\n\r\nThis workshop, offered multiple times, targets students with some prior programming experience in other languages but who are interested in learning MATLAB for research or coursework.  We will conduct a hands-on walkthrough of what MATLAB has to offer as a foundation for later tutorials throughout the semester.  (This workshop will overlap with much of the content in the \"Beginning MATLAB\" course above, so there's no need to attend both.)\r\n\r\nWe will cover the following topics (in more depth than the beginning class above):\r\n\r\n- Libraries and modules\r\n- Loops, logic, and conditionals\r\n- Input/output, files\r\n- Basic numerical examples & matrix solutions\r\n\r\n### Lesson Materials\r\n\r\n![Truss image](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/truss.png)\r\n\r\n![Truss matrix](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/truss-matrix.png)\r\n\r\n[Basic Exercises](https://github.com/uiuc-cse/matlab-fa14/blob/gh-pages/lessons/exercises-beginner.pdf?raw=true)\r\n\r\nSkeleton code for [`computedamrateofflow.m`](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/computedamrateofflow.m).\r\n\r\nSpring data:\r\n\r\n    m = [5 10 20 50 100];                 % mass data, g\r\n    d = [15.5 33.07 53.39 140.24 301.03]; % displacement, mm\r\n    g = 9.81;                             % g = 9.81 m/s^2\r\n    F = m/1000 *g;                        % spring force (N)\r\n\r\n# [Numerical Programming with MATLAB](#num-methods)\r\n### Oct. 2, 10–Noon • MEL 1001\r\n### Oct. 9, 10–Noon • MEL 1001\r\n\r\nThis tutorial focuses on the solution of differential equations and similar systems with MATLAB.\r\n\r\n**Spring Interpolation Data**\r\n\r\n    m = [5 10 20 50 100];                   %mass data (g)\r\n    d = [15.5 33.07 53.39 140.24 301.03];   %displacement data (mm) \r\n    g = 9.81;                               %g = 9.81\r\n    F = m/1000 *g;                          %compute spring force (N)\r\n\r\n**Heat Equation by Finite Difference Method**\r\n\r\nFinite-difference models are used throughout engineering to obtain numerical solutions to differential equations.  This particular system models the heat equation\r\n\r\n$$ \\frac{1}{\\alpha} \\frac{\\partial u}{\\partial t} = \\frac{\\partial^2 u}{\\partial x^2}$$\r\n\r\ngiven an initial condition of $u(x,t=0) = \\sin\\left(\\pi x/L\\right)$ and boundary conditions of $u(x=0,t) = 0$ and $u(x=L,t) = 0$.\r\n\r\nTo approximate a derivative, the most straightforward way is to take the formal definition\r\n\r\n$$f'(x) = \\frac{f(x+h)-f(x)}{h}$$\r\n\r\nand use a small but nonzero step $h$ in your calculation.\r\n\r\nApplication of this principle to the heat equation leads to a statement of the form\r\n\r\n$$ \\frac{1}{\\alpha} \\frac{u^m_i - u^{m-1}_i}{\\Delta t} = \\frac{u^{m-1}_{i-1} - 2 u^{m-1}_{i} + u^{m-1}_{i+1}}{\\Delta x^2} $$\r\n\r\nor $u^m_i = \\frac{\\alpha \\Delta t}{\\Delta x^2}u^{m-1}_{i-1} + \\left[1 - 2\\left(\\frac{\\alpha \\Delta t}{\\Delta x^2}\\right)\\right]u^{m-1}_{i} + \\frac{\\alpha \\Delta t}{\\Delta x^2}u^{m-1}_{i+1}$.\r\n\r\nThis clearly yields a way to calculate subsequent time steps point-by-point from the previous time step's data.\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/fd-stencil.png)\r\n\r\n**Radioactive Decay System of Differential Equations**\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/rad-decay-chain.png)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/rad-decay.png)\r\n\r\n# [Distributed & Parallel MATLAB](#parallel)\r\n### <font color=\"red\">Postponed</font> • MEL 1001\r\n\r\n# [MathWorks site visit:  MATLAB R2014b](#mathworks)\r\n### Oct. 28 • DCL 2240\r\n\r\n# [Image Processing in MATLAB](#image)\r\n### Oct. 30, 10–Noon • MEL 1001\r\n\r\nThis workshop will introduce image data structures and elements of image analysis in MATLAB.\r\n\r\n### Lesson Materials\r\n\r\n[Satellite k-means detection script](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/satellite_kmeans.m)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/bridge.png)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/cell.png)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/circledet.png)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/coins.png)\r\n\r\n![](https://raw.githubusercontent.com/uiuc-cse/matlab-fa14/gh-pages/lessons/img/satellite.png)\r\n\r\n# About These Workshops\r\n### Contributors\r\nNeal Davis, Rishabh Narang, and Erika Fotsch developed these materials. This content is available under a Creative Commons Attribution 3.0 Unported License.\r\n\r\n![CC-BY-3.0](https://i.creativecommons.org/l/by/3.0/88x31.png)\r\n\r\n# Contact\r\nIf you have any questions about course availability, concepts, or content, please contact Neal Davis, Training Coördinator for Computational Science & Engineering, at davis68 at illinois dot edu.","google":"m= [5 10 20 50 100];                    %mass data (g) d= [15.5 33.07 53.39 140.24 301.03];    %displacement data (mm)  g = 9.81;                               %g = 9.81 F = m/1000 *g;                          %compute spring force (N)","note":"Don't delete this file! It's used internally to help with page regeneration."}